<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Checkout Process</title>
  <script src="https://js.stripe.com/v3/"></script> 
  <style>
    /* Basic and modern styling as per HERO code */
    * { box-sizing: border-box; margin: 0; padding: 0; font-family: Arial, sans-serif; }
    body { display: flex; justify-content: center; align-items: center; background-color: #f4f8fd; color: #333; height: 100vh; }
    .container { display: flex; padding: 30px; width: 90%; max-width: 1200px; background: #fff; border-radius: 12px; box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1); }
    .content, .summary { flex: 1; padding: 20px; }
    .summary { margin-left: 20px; max-width: 300px; background: #f4f8fd; border-radius: 8px; padding: 20px; text-align: center; }
    .summary h3 { margin-bottom: 20px; font-size: 1.5em; }
    .checkout-step { display: none; opacity: 0; transform: translateX(50px); transition: opacity 0.6s ease, transform 0.6s ease; }
    .checkout-step.active { display: block; opacity: 1; transform: translateX(0); }
    .buttons { display: flex; justify-content: space-between; margin-top: 20px; }
    .buttons button { padding: 12px 24px; border: none; cursor: pointer; border-radius: 25px; background: #007bff; color: white; font-size: 1em; }
    .buttons button:hover { background: #0056b3; }
    .buttons button:disabled { background: #ccc; cursor: not-allowed; }
    .hosting-options label { display: block; padding: 15px; margin: 8px 0; border: 2px solid #e0e4ec; border-radius: 8px; cursor: pointer; }
    input[type="text"], .stripe-input { width: 100%; padding: 10px; margin: 8px 0; border: 2px solid #e0e4ec; border-radius: 8px; }
    .summary .total { font-weight: bold; font-size: 1.2em; margin-top: 15px; }
  </style>
</head>
<body>
  <div class="container">
    <div class="content">
      <div class="checkout-step active" id="step-hosting">
        <h2>Hosting</h2>
        <p>Please select a hosting option for your website. Hosting is essential to keep your site live at all times.</p>
        <div class="hosting-options">
          <label><input type="radio" name="hosting" value="15" onclick="updateCheckout('Lite Hosting (Monthly)', 15, 'Website Development', 450)"> £15 /Per Month</label>
          <label><input type="radio" name="hosting" value="150" onclick="updateCheckout('Lite Hosting (Yearly)', 150, 'Website Development', 369)"> £150 /Per Year</label>
        </div>
      </div>
      
      <div class="checkout-step" id="step-details">
        <h2>Details</h2>
        <p>Please provide your billing details. This can be business or personal.</p>
        <form id="checkout-form">
          <input type="text" name="first_name" placeholder="First Name" required>
          <input type="text" name="last_name" placeholder="Last Name" required>
          <input type="email" name="email" placeholder="Email" required>
          <input type="text" name="phone" placeholder="Phone" required>
          <input type="text" name="address" placeholder="Address" required>
          <input type="text" name="city" placeholder="City" required>
          <input type="text" name="state" placeholder="State/Region" required>
          <input type="text" name="zip" placeholder="Postal Code" required>
          <input type="text" name="country" placeholder="Country" required>
          <button type="button" onclick="submitFormWithLoading(this)">Next</button>
        </form>
      </div>

      <div class="checkout-step" id="step-domain">
        <h2>Domain</h2>
        <p>Why not get a new domain with your new website?</p>
        <input type="text" id="domainInput" placeholder="Enter domain name">
        <button id="exploreButton" onclick="checkDomain()">Explore</button>
        <div id="resultsContainer"></div>
      </div>

      <div class="checkout-step" id="step-agreement">
        <h2>Agreement</h2>
        <p>Terms and conditions...</p>
        <button type="button" onclick="nextSection()">Next</button>
      </div>

      <div class="checkout-step" id="step-payment">
        <h2>Payment</h2>
        <input type="text" id="cardHolderName" placeholder="Card Holder Name">
        <div id="card-element" class="stripe-input"></div>
        <button id="payment-button" onclick="processPayment()">Pay</button>
      </div>

      <div class="checkout-step" id="step-confirmation">
        <h2>Confirmation</h2>
        <p>Thank you! Your project has been received and paid.</p>
      </div>
      
      <div class="buttons">
        <button id="prev-btn" onclick="changeStep(-1)" disabled>Back</button>
        <button id="next-btn" onclick="changeStep(1)">Next</button>
      </div>
    </div>

    <div class="summary">
      <h3>Your Checkout</h3>
      <div id="summary-items"></div>
      <div id="domain-email"></div>
      <div class="total">Today's Grand Total: £<span id="grand-total">0.00</span></div>
      <div>Subscription / Hosting Details: You'll continue to be charged each period.</div>
    </div>
  </div>

  <script>
    let grandTotal = 0;
    let stripe = Stripe("YOUR_STRIPE_PUBLIC_KEY");
    const elements = stripe.elements();
    const cardElement = elements.create("card");
    cardElement.mount("#card-element");

    function changeStep(step) {
      // Manage active class for steps with fade effect
    }

    function updateCheckout(hostingName, hostingPrice, devName, devPrice) {
      grandTotal = hostingPrice + devPrice;
      document.getElementById("grand-total").innerText = grandTotal.toFixed(2);
      document.getElementById("summary-items").innerHTML = 
        `<div>${hostingName} - £${hostingPrice}</div><div>${devName} - £${devPrice}</div>`;
    }

    async function submitFormWithLoading(button) {
      button.disabled = true; // disable button to prevent multiple submits
      // Form submission logic (like creating client on Flowlu)
      // For example:
      try {
        const response = await fetch("/api/create-client", {
          method: "POST",
          body: JSON.stringify({
            first_name: document.querySelector('input[name="first_name"]').value,
            // Add all other form fields
          }),
        });
        const result = await response.json();
        if (result.success) {
          button.disabled = false; // enable button if needed
          nextSection(); // go to the next section
        }
      } catch (error) {
        console.error("Form submission failed", error);
      }
    }

    async function checkDomain() {
      const domain = document.getElementById("domainInput").value;
      try {
        const response = await fetch(`/api/check-domain?domain=${domain}`);
        const data = await response.json();
        // Populate domain results
        const container = document.getElementById("resultsContainer");
        container.innerHTML = data.available ? "Domain is available!" : "Domain is taken.";
      } catch (error) {
        console.error("Domain check failed", error);
      }
    }

    async function processPayment() {
      const { paymentMethod, error } = await stripe.createPaymentMethod({
        type: "card",
        card: cardElement,
        billing_details: {
          name: document.getElementById("cardHolderName").value
        }
      });

      if (!error) {
        // Further payment processing, backend communication to complete the payment
        alert("Payment succeeded!");
        nextSection(); // proceed to confirmation
      } else {
        console.error("Payment failed", error);
      }
    }

    function nextSection() {
      // Handle logic to switch to the next section
    }
  </script>
</body>
</html>
